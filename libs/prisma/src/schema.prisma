// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model board {
  key         String   @id @unique @db.VarChar(10)
  name        String
  description String?
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at")

  taskSequence task_sequence?

  task   task[]
  column column[]
}

model column {
  name        String
  position    Float    @db.DoublePrecision
  statusColor String?  @db.VarChar(7)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at")

  board    board  @relation(fields: [boardKey], references: [key], onDelete: Cascade)
  boardKey String

  task task[]

  @@id([boardKey, name], map: "id")
  @@index([boardKey, position])
}

model task {
  id          String   @id @default("")
  name        String
  description String?
  position    Float    @db.DoublePrecision
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at")

  board    board  @relation(fields: [boardKey], references: [key])
  boardKey String @map("board_key")

  column         column @relation(fields: [columnBoardKey, columnName], references: [boardKey, name])
  columnBoardKey String
  columnName     String @map("column_name")

  @@index([columnBoardKey, columnName, position])
}

model task_sequence {
  board      board  @relation(fields: [boardKey], references: [key])
  boardKey   String @id @map("board_key")
  lastNumber Int    @default(0) @map("last_number")
}
